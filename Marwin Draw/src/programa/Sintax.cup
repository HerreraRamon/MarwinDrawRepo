package programa;

import java_cup.runtime.Symbol;
import java.util.HashMap;
import java.io.*;
import programa.TablaSimbolos.*;
import programa.TablaSimbolos.Simbolo;
parser code
{:
    

    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
        Pantalla.algo("Error de sintaxis. El error se encuentra en: " +s.value+ " Linea:    " +(s.right+1));
    }

    public Symbol getS(){
        
        return this.s;
    }
        public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        this.s = s;
        Pantalla.algo("Error R de sintaxis. El error se encuentra en: " +s.value+ "Linea:   " + (s.left+1));}
:};
action code {:
    private TablaSimbolos tabla= new TablaSimbolos();
    
:};

terminal String Numero , Identificador, T_dato,Int, Cadena;
terminal Linea, Comillas, If, Else, For,
    Igual, Suma, Resta, Multiplicacion, Division, Op_logico, Op_relacional,
    Op_atribucion, Op_incremento, Op_booleano, Parentesis_a, Parentesis_c,
    Llave_a, Llave_c, Corchete_a, Corchete_c, Main,Squa,Tria,Circ,Trazar,Index,
    Move,Rotate,Resize,Link,Draw,Funcion,All, P_coma, 
    Array,Table, ERROR;

non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,
    FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR, FIGURE,FIG, VALOR,
    IND, ARREGLO, MANIPULATE,MAN,FUNCION, PARAM, TABLE, UNIR, OBJETO,
    EXPRESION, OPERADOR, ERRORES;

start with INICIO;

INICIO ::= 
    Main Parentesis_a Parentesis_c Llave_a SENTENCIA Llave_c 
    {: tabla.imprimir(); :} |
    Main Parentesis_a Parentesis_c Llave_a SENTENCIA Llave_c FUNCION|
    Int Main Parentesis_a Parentesis_c Llave_a SENTENCIA Llave_c FUNCION
;
SENTENCIA ::= 
    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA IF | 
    IF |
    SENTENCIA IF_ELSE |
    IF_ELSE |
    SENTENCIA FOR |
    FOR |
    SENTENCIA FIGURE |
    FIGURE |
    SENTENCIA IND|
    IND |
    SENTENCIA MANIPULATE|
    MANIPULATE |
    SENTENCIA TABLE |
    TABLE |
    error P_coma |
    error Llave_c
;

DECLARACION ::= 
    T_dato:t Identificador:e P_coma 
    {:  Simbolo si;
        if ((si = tabla.getSymbol(e)) == null)tabla.addSymbol(e,t,"");
        else Pantalla.errorSemantico("Error de semantica ya existe la variable "+e);    
    :}|
    T_dato:t Identificador:e Igual Numero:n P_coma 
    {:  Simbolo si;
        if ((si = tabla.getSymbol(e)) == null)tabla.addSymbol(e,t,n);
        else Pantalla.errorSemantico("Error de semantica ya existe la variable "+e);    
    :}|

    Cadena:t Identificador:e Igual Comillas Comillas P_coma   
    {:  Simbolo si;
        if ((si = tabla.getSymbol(e)) == null)tabla.addSymbol(e,t,"");
        else Pantalla.errorSemantico("Error de semantica ya existe la variable "+e);    
    :}|
    Cadena:t Identificador:e Igual Comillas Identificador:n Comillas P_coma     
    {:  Simbolo si;
        if ((si = tabla.getSymbol(e)) == null)tabla.addSymbol(e,t,n);
        else Pantalla.errorSemantico("Error de semantica ya existe la variable "+e);    
    :}|
    Array T_dato:t Identificador:e Igual Corchete_a ARREGLO Corchete_c P_coma     
    {:  Simbolo si;
        if ((si = tabla.getSymbol(e)) == null)tabla.addSymbol(e,t,"");
        else Pantalla.errorSemantico("Error de semantica ya existe la variable "+e);    
    :}|
    Funcion Identificador Parentesis_a Parentesis_c P_coma  |
    Funcion Identificador Parentesis_a VALOR Parentesis_c P_coma  
;
IF ::= If Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c
;
SENTENCIA_BOOLEANA ::= 
    Op_booleano | 
    Identificador:id Op_relacional Op_booleano 
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe la variable "+id);
             :} |
    Identificador:id Op_relacional Numero:n 
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :} |
    Identificador:e1 Op_relacional Identificador:e2  
    {: Simbolo si;
        if ((si = tabla.getSymbol(e1)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+e1);
        if ((si = tabla.getSymbol(e2)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+e2);

    :} |
    Identificador:id Op_relacional Comillas Comillas  
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :} |
    Identificador Op_relacional Comillas Identificador Comillas
;
IF_ELSE ::= If Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c Else Llave_a SENTENCIA Llave_c
;
FOR ::= For Parentesis_a SENTENCIA_FOR Parentesis_c Llave_a SENTENCIA Llave_c
;
SENTENCIA_FOR ::=
    T_dato:t Identificador:e Igual Numero:n P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR 
    {:
        Simbolo si;
        if ((si = tabla.getSymbol(e)) == null)tabla.addSymbol(e,t,n);
        else Pantalla.errorSemantico("Error de semantica ya existe la variable "+e);
        
    :}
    |
    Identificador:id Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :}
;
FIGURE ::=
    T_dato:t Identificador:e Igual FIG Parentesis_a VALOR P_coma VALOR P_coma VALOR P_coma VALOR Parentesis_c P_coma
    {:
        Simbolo si;
        if ((si = tabla.getSymbol(e)) == null)tabla.addSymbol(e,t,"");
        else Pantalla.errorSemantico("Error de semantica ya existe la variable "+e);
        
    :}
;

DECLARACION_FOR ::= 
    Identificador:id Op_atribucion Numero 
        {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :}|
    Identificador:id Op_incremento 
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :}| 
    Op_incremento Identificador:id 
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :}| 
;

VALOR ::=
    Identificador:id  
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :}| 
     Numero
;
FIG::=
    Squa | Tria | Circ | Trazar
;

IND::=
    Index Parentesis_a VALOR P_coma VALOR Parentesis_c P_coma
;

ARREGLO::=
    Identificador:id P_coma ARREGLO     
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :}| Identificador:id
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :}| 
;

MANIPULATE::=
    MAN Parentesis_a VALOR P_coma VALOR P_coma VALOR Parentesis_c P_coma |
    Rotate Parentesis_a VALOR P_coma VALOR Parentesis_c P_coma |
    MAN  Parentesis_a All P_coma VALOR P_coma VALOR Parentesis_c P_coma |
    Rotate Parentesis_a All P_coma VALOR Parentesis_c P_coma 
;
UNIR ::=
    Link Parentesis_a OBJETO Parentesis_c
;
OBJETO::=
    Identificador:id P_coma  
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :}| Identificador:id 
    {: Simbolo si;
        if ((si = tabla.getSymbol(id)) == null)Pantalla.errorSemantico("Error de semantica no existe  la variable "+id);
    :}
;
MAN::=
    Move | Draw| Resize
;
FUNCION::=
    Identificador Parentesis_a PARAM Parentesis_c Llave_a SENTENCIA Llave_c |
    Identificador Parentesis_a Parentesis_c Llave_a SENTENCIA Llave_c
;

PARAM ::=
    T_dato Identificador PARAM| T_dato Identificador
;

TABLE::=
    Table Parentesis_a VALOR P_coma VALOR Parentesis_c P_coma
;
EXPRESION::= Identificador OPERADOR Identificador;
OPERADOR::= Igual |Suma | Resta | Multiplicacion| Division;
ERRORES::=
DECLARACION
|IF 
|FOR
|IF_ELSE
|FIGURE
|IND
|MANIPULATE
|TABLE
|error P_coma
|error Llave_c
;

    